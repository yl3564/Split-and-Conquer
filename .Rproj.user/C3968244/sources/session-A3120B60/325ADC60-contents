k=4
X=iid
ncores = 2
cl <- makeCluster(ncores)
registerDoParallel(cl)
beta_dat = foreach(i=1:k,.packages = "glmnet") %dopar%{
    X_k<-X[(n/k*(i-1)+1):(n/k*i),]
    y_k<-y[(n/k*(i-1)+1):(n/k*i)]
    cvfit.update<-cv.glmnet(X_k,y_k,alpha=1,family="binomial",type.measure="class")
    sub_beta<-coef(cvfit.update,s=cvfit.update$lambda.1se)
    theta<-X_k%*%as.numeric(sub_beta)[-1]
    s<-exp(theta)/(1+exp(theta))^2
    return(c(as.numeric(sub_beta)[-1],s))
}
beta_dat<-data.frame(sapply(beta_dat, as.numeric))
beta_data<-beta_dat[1:p,]
Sigma<-beta_dat[(p+1):(p+n/k),]
stopCluster(cl)
  
  E_index<-apply(beta_data!=0,MARGIN=1,FUN=sum)[-1]
  E<-matrix(rep(0,p*p),nrow=p)
  E_index<-which(E_index>=w)
  E[cbind(E_index,E_index)]<-1
  A<-E[,E_index]
  
  

  
  m1<-matrix(0,nrow=dim(A)[2],ncol=dim(A)[2])
  m2<-matrix(0,nrow=dim(A)[2],ncol=1)
  for (i in 1:k) {
    s<-diag(c(Sigma[[i]]))
    x<-X[(n/k*(i-1)+1):(n/k*i),]
    M1<-t(A)%*%t(x)%*%s%*%x%*%A
    m1<-m1+M1
    beta_x<-beta_data[-1,i][E_index]
    M2<-M1%*%beta_x
    m2<-m2+M2
  }
  beta_c<-A%*%solve(m1)%*%m2
  stopCluster(cl)
  
  
  
  SC_fun<-function(k,X,y,w,ncores){
    n<-dim(X)[1]
    p<-dim(X)[2]
    index<-sample(1:n,size=n,replace=F)
    X<-X[index,]
    y<-y[index]
    cl <- makeCluster(ncores)
    registerDoParallel(cl)
    beta_dat = foreach(i=1:k,.packages = "glmnet") %dopar%{
      X_k<-X[(n/k*(i-1)+1):(n/k*i),]
      y_k<-y[(n/k*(i-1)+1):(n/k*i)]
      cvfit.update<-cv.glmnet(X_k,y_k,alpha=1,family="binomial",type.measure="class")
      sub_beta<-coef(cvfit.update,s=cvfit.update$lambda.1se)
      sub_beta
    }
    beta_data<-data.frame(sapply(beta_dat,as.numeric))
    
    E_index<-apply(beta_data!=0,MARGIN=1,FUN=sum)[-1]
    E<-matrix(rep(0,p*p),nrow=p)
    E_index<-which(E_index>=w)
    E[cbind(E_index,E_index)]<-1
    A<-E[,E_index]
    
    Sigma = foreach(i=1:k) %dopar%{
      theta<-X[(n/k*(i-1)+1):(n/k*i),]%*%beta_data[-1,i]
      s<-exp(theta)/(1+exp(theta))^2
      s
    }
    
    m1<-matrix(0,nrow=dim(A)[2],ncol=dim(A)[2])
    m2<-matrix(0,nrow=dim(A)[2],ncol=1)
    for (i in 1:k) {
      s<-diag(c(Sigma[[i]]))
      x<-X[(n/k*(i-1)+1):(n/k*i),]
      M1<-t(A)%*%t(x)%*%s%*%x%*%A
      m1<-m1+M1
      beta_x<-beta_data[-1,i][E_index]
      M2<-M1%*%beta_x
      m2<-m2+M2
    }
    beta_c<-A%*%solve(m1)%*%m2
    stopCluster(cl)
    return(beta_c)
  }
